name: build-docker-jn-web

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

  workflow_dispatch:

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: echo branch name
        run: echo ${{ steps.extract_branch.outputs.branch }}

      # - name: Build the docker image from production
      #   working-directory: ./
      #   if: ${{ steps.extract_branch.outputs.branch =='main' }}
      #   run: docker build --build-arg REACT_APP_WEB_API=https://jnmoveis.com.br/api --build-arg NODE_ENV=development -f Dockerfile.front -t albuquerquedev/front-orcamento-express:prod .

      # - name: Build the docker image from develop 
      #   working-directory: ./
      #   if: ${{ steps.extract_branch.outputs.branch =='develop' }}
      #   run: docker build --build-arg REACT_APP_WEB_API=https://jnmoveis.com.br/api --build-arg NODE_ENV=development -f Dockerfile.front -t albuquerquedev/front-orcamento-express:dev .
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWD }}

      # - name: Push image to Docker Hub
      #   run: docker push albuquerquedev/front-orcamento-express:prod

      - name: Check out my other private repo
        uses: actions/checkout@main
        with:
          repository: Albuquerquess/jn-infra
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: 'terraform'
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # # # # # ENV # # # # # 

          aws_default_tags: ""

          TF_VAR_aws_access_key_id:  "AKIAQIGJGVEJH3QVMI5O"

          TF_VAR_aws_secret_access_key:  "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"

          TF_VAR_current_environment:  "prod"

          TF_VAR_aws_profile:  "JNRoot"

          TF_VAR_aws_region:  "us-east-1"

          # # # # # EC2 # # # # # 

          TF_VAR_aws_ami:  "ami-04505e74c0741db8d"

          TF_VAR_aws_instance_type:  "t2.micro"

          TF_VAR_aws_subnet_public_cidr_block:  "10.0.1.0/24"

          TF_VAR_aws_subnet_private_cidr_block:  "10.0.2.0/24"

          # # # # # VPC # # # # # 

          TF_VAR_aws_vpc_cird_block:  "10.0.0.0/16"

          TF_VAR_aws_vpc_enable_dns_hostnames:  true

          TF_VAR_subnet_map_public_ip_on_launch:  true

          TF_VAR_destination_cidr_block:  "0.0.0.0/0"

          TF_VAR_aws_vpc_instance_tenancy:  "default"

          TF_VAR_aws_vpc_enable_dns_support:  true

          TF_VAR_aws_subnet_availability_zone:  "us-east-1a"
      
      - name: list tree AFTER INIT
        run: ls -la

      - name: list tree AFTER INIT back page
        run: ls -la ../

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              TF_ACTION_WORKING_DIR: 'terraform'
              AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Sync S3
      #   uses: jakejarvis/s3-sync-action@master
      #   env:
      #     SOURCE_DIR: './src'
      #     AWS_REGION: 'us-east-1'
      #     AWS_S3_BUCKET: 'jn-s3-terraform-state'
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
